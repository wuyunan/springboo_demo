buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        lombokVersion = '1.18.6'
        jjwtVersion = '0.7.0'
        activitiVersion = '6.0.0'
        swaggerVersion = '2.9.2'
        queryDslVersion = '4.1.3'

    }
    repositories {

        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()


    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')

    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'wuyunan'

bootJar {
    baseName = 'spring-boot-vultr'
    version = '0.1.0'
}

repositories {
    mavenCentral()

    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}
configurations.all {
    exclude module: 'slf4j-log4j12'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // JPA
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    // compile('org.springframework.boot:spring-boot-starter-data-mongodb')

    compile('org.springframework.boot:spring-boot-starter-data-redis')

    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.security:spring-security-messaging")

//    compile("org.springframework.boot:spring-boot-starter-log4j2")

    // Use MySQL Connector-J
    compile('mysql:mysql-connector-java')

    compile 'com.aliyun:aliyun-java-sdk-core:4.0.2'
    compile 'com.yunpian.sdk:yunpian-java-sdk:1.2.7'
    compile 'com.alibaba:fastjson:1.2.15'
    compile("io.jsonwebtoken:jjwt:${jjwtVersion}")
    compile("com.querydsl:querydsl-core:${queryDslVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
    compile("com.jcraft:jsch:0.1.55")

    compile("org.apache.commons:commons-lang3:3.4")
    // compile("org.springframework.boot:spring-boot-starter-amqp")
    // swagger
    compile("io.springfox:springfox-swagger2:${swaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${swaggerVersion}")
    compile("io.springfox:springfox-bean-validators:${swaggerVersion}")
    compile("io.springfox:springfox-data-rest:${swaggerVersion}")
    compile 'de.pentabyte:springfox-enum-plugin:1.1.1'

//
//    compile("org.activiti:activiti-spring-boot-starter-basic:${activitiVersion}")
    compile("org.activiti:activiti-engine:${activitiVersion}")
    compile("org.activiti:activiti-spring:${activitiVersion}")
    compile("org.activiti:activiti-rest:${activitiVersion}")
    compile("org.activiti:activiti-json-converter:${activitiVersion}")


    compile('com.amazonaws:aws-java-sdk-s3:1.11.483')

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
            "org.projectlombok:lombok:${lombokVersion}")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
    testCompile("org.apache.httpcomponents:httpclient:4.5.7")
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}